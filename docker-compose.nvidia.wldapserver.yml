###***add in args here and update to version 3 if it's possible with nvidia runtime

version: '2.3'
#version: '3'
services:
    redis:
        image: "redis:latest"
        container_name: "redis"
        networks:
            - crackq_net
        ports:
            - "127.0.0.1:6379:6379"
    crackq:
        build:
            context: ./build
            dockerfile: Dockerfile
        image: "nvidia-centos"
        ports:
            - "127.0.0.1:8080:8080"
        depends_on:
            - redis
        networks:
            - crackq_net
        container_name: "crackq"
        volumes:
            - /var/crackq/:/var/crackq
            - ./crackq:/opt/crackq/build/crackq/
        stdin_open: true
        runtime: nvidia
        user: crackq
        tty: true
        environment:
                PYTHONPATH: "/opt/crackq/build/"
                MAIL_USERNAME: ${MAIL_USERNAME}
                MAIL_PASSWORD: ${MAIL_PASSWORD}
        command:
            #sh -c "/bin/bash"
            sh -c "./benchmark.sh &&
            pip3 install . --user && cd ./crackq &&
            /usr/local/bin/circusd /opt/crackq/build/circus.ini"
            
    nginx:
        build:
            context: .
            dockerfile: Dockerfile.nginx
        image: "nginx-crackq"
        restart: always
        depends_on:
                - crackq 
        container_name: "nginx"
        ports:
             - "443:443"
        volumes:
             - /var/crackq/files/nginx/conf.d:/etc/nginx/conf.d
        #     - /var/crackq/files/nginx/:/etc/nginx/
        stdin_open: true
        tty: true
        #command:
        #    sh -c "/bin/bash"
        networks:
            - crackq_net

    openldap:
        image: osixia/openldap:1.2.4 
        environment:
                LDAP_LOG_LEVEL: "256"
                LDAP_ORGANISATION: "Example Inc."
                LDAP_DOMAIN: "example.org"
                LDAP_BASE_DN: ""
                LDAP_ADMIN_PASSWORD: "chu437hnjdG8LmsEchsdfu7u4283915fdJ"
                LDAP_CONFIG_PASSWORD: "config"
                LDAP_READONLY_USER: "false"
                LDAP_RFC2307BIS_SCHEMA: "false"
                LDAP_BACKEND: "mdb"
                LDAP_TLS: "true"
                LDAP_TLS_CRT_FILENAME: "ldap.crt"
                LDAP_TLS_KEY_FILENAME: "ldap.key"
                LDAP_TLS_DH_PARAM_FILENAME: "dhparam.pem"
                LDAP_TLS_CA_CRT_FILENAME: "ca.crt"
                LDAP_TLS_ENFORCE: "false"
                LDAP_TLS_CIPHER_SUITE: "SECURE256:-VERS-SSL3.0"
                LDAP_TLS_PROTOCOL_MIN: "3.1"
                LDAP_TLS_VERIFY_CLIENT: "try"
                LDAP_REPLICATION: "false"
                KEEP_EXISTING_CONFIG: "True"
                LDAP_REMOVE_CONFIG_AFTER_SETUP: "true"
                LDAP_SSL_HELPER_PREFIX: "ldap"
        tty: true
        stdin_open: true
        volumes:
                - /var/lib/ldap
                - /etc/ldap/slapd.d
                - /container/service/slapd/assets/certs/
                - ./docker/openldap/bootstrap:/container/service/slapd/assets/config/bootstrap/ldif/custom
        command: --copy-service --loglevel debug
        container_name: "ldap.crackq.org"
        hostname: "ldap.crackq.org"
        domainname: "ldap.crackq.org"
        ports:
             - "127.0.0.1:389:389"
             - "127.0.0.1:636:636"
        networks:
            - crackq_net


networks:
    crackq_net:
